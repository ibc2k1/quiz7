{"version":3,"sources":["typeName.js","typePassword.js","todoList.js","all.js","logincontrol.js","App.js","reportWebVitals.js","index.js"],"names":["TypeName","TextField","id","label","placeholder","multiline","TypePassword","List","TodoTitle","React","Component","TodoAddForm","todoRef","createRef","addItemOnList","e","preventDefault","todoItem","todo","current","value","isCompleted","props","addToDoItems","currentTarget","reset","onSubmit","this","type","name","ref","required","TodoList","handleChange","event","updateTodo","todoItems","console","log","updateTodos","index","toggleCheckbox","checked","className","onChange","onClick","removeToDoItem","TodoApp","state","item","items","Date","now","setState","todos","key","updatedTodo","Object","keys","map","ReactDOM","render","initItems","document","getElementById","Login","All","isLoggedIn","LoginButton","Button","variant","color","Link","LogoutButton","LoginControl","handleLoginClick","bind","handleLogoutClick","button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.a7c278b7.chunk.js","sourcesContent":["import TextField from '@material-ui/core/TextField';\r\n\r\nconst TypeName=()=>{\r\n    return (<TextField\r\n    id=\"standard-textarea\"\r\n    label=\"Email Address\"\r\n    placeholder=\"Email Address\"\r\n    multiline\r\n  />)\r\n}\r\n\r\n\r\nexport default TypeName;","import TextField from '@material-ui/core/TextField';\r\n\r\nconst TypePassword=()=>{\r\n    return (<TextField\r\n        id=\"standard-textarea\"\r\n        label=\"Password\"\r\n        placeholder=\"Password\"\r\n        multiline\r\n      />)\r\n}\r\n\r\nexport default TypePassword;","import React from 'react'; \r\nimport ReactDOM from 'react-dom';\r\nimport { Component } from \"react\";\r\nimport './list.css';\r\n\r\nconst List=()=>{\r\n    class TodoTitle extends React.Component {\r\n        render () {\r\n        return <h1>CGU Todo list</h1>;\r\n        }\r\n    }\r\n\r\n    class TodoAddForm extends React.Component {\r\n        todoRef = React.createRef();\r\n    \r\n        addItemOnList = e => {\r\n        e.preventDefault();\r\n        const todoItem = {\r\n            todo: this.todoRef.current.value,\r\n            isCompleted: false\r\n        };\r\n        this.props.addToDoItems(todoItem);\r\n        e.currentTarget.reset();\r\n        };\r\n    \r\n        render() {\r\n        return (\r\n            <form id=\"todoList-form\" onSubmit={this.addItemOnList}>\r\n            <input type=\"text\" name=\"todosTxtbx\" ref={this.todoRef} required />\r\n            <button>+</button>\r\n            </form>\r\n        );\r\n        }\r\n    }\r\n\r\n    class TodoList extends React.Component {\r\n        handleChange = event => {\r\n        const updateTodo = {\r\n            ...this.props.todoItems,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        console.log(event.currentTarget.value);\r\n        this.props.updateTodos(this.props.index, updateTodo);\r\n        };\r\n    \r\n        toggleCheckbox = event => {\r\n        const updateTodo = {\r\n            ...this.props.todoItems,\r\n            [event.currentTarget.name]: event.currentTarget.checked\r\n        };\r\n        this.props.updateTodos(this.props.index, updateTodo);\r\n        };\r\n    \r\n        render() {\r\n        return (\r\n            <li className={this.props.todoItems.isCompleted ? \"done\" : null}>\r\n            <input\r\n                type=\"checkbox\"\r\n                name=\"isCompleted\"\r\n                checked={this.props.todoItems.isCompleted}\r\n                onChange={this.toggleCheckbox}\r\n                // checked={this.props.todoItems.isChecked}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"todo\"\r\n                value={this.props.todoItems.todo}\r\n                onChange={this.handleChange}\r\n            />\r\n            {/* <button>Edit</button> */}\r\n            <button\r\n                className=\"del-btn\"\r\n                onClick={() => this.props.removeToDoItem(this.props.index)}\r\n            >\r\n                x\r\n            </button>\r\n            </li>\r\n        );\r\n        }\r\n    }\r\n\r\n    var ToDoItems = [];\r\n    class TodoApp extends Component {\r\n    state = {\r\n        todoItems: {}\r\n    };\r\n\r\n    addToDoItems = item => {\r\n        const items = { ...this.state.todoItems };\r\n        console.log(items);\r\n        items[`item${Date.now()}`] = item;\r\n        this.setState({\r\n        todoItems: items\r\n        });\r\n    };\r\n\r\n    removeToDoItem = item => {\r\n        const todos = { ...this.state.todoItems };\r\n        delete todos[item];\r\n        this.setState({ todoItems: todos });\r\n    };\r\n\r\n    updateTodos = (key, updatedTodo) => {\r\n        const todos = { ...this.state.todoItems };\r\n        todos[key] = updatedTodo;\r\n        this.setState({ todoItems: todos });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"main\">\r\n            <TodoTitle/>\r\n            <TodoAddForm addToDoItems={this.addToDoItems} />\r\n            <ul>\r\n            {Object.keys(this.state.todoItems).map(key => (\r\n                <TodoList\r\n                key={key}\r\n                index={key}\r\n                todoItems={this.state.todoItems[key]}\r\n                removeToDoItem={this.removeToDoItem}\r\n                updateTodos={this.updateTodos}\r\n                />\r\n            ))}\r\n            </ul>\r\n        </div>\r\n        );\r\n    }\r\n    }\r\n\r\n    ReactDOM.render(<TodoApp initItems={ToDoItems}/>, document.getElementById('root'));\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SignInButton from './signInButton'\r\nimport TypeName from './typeName'\r\nimport TypePassword from './typePassword'\r\nimport List from './todoList.js';\r\n\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"Login\">\r\n      <div>\r\n        { TypeName() }\r\n      </div>\r\n      <div>\r\n        { TypePassword() }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TodoList() {\r\n    return (\r\n        <div>{ List() }</div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction All(props) { \r\n  const isLoggedIn = props.isLoggedIn; \r\n  if (isLoggedIn) {\r\n    return <TodoList />;\r\n }\r\n return <Login />; \r\n} \r\n  ReactDOM.render( \r\n    <All isLoggedIn={false} />, document.getElementById('root') \r\n  );\r\n\r\n\r\nexport default All;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport All from './all.js';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction LoginButton(props) {\r\n    return <Button onClick={props.onClick}\r\n        variant=\"contained\" color=\"primary\"\r\n            >\r\n    <Link color=\"inherit\" >\r\n      Sign In\r\n    </Link>\r\n  </Button>; \r\n}\r\n\r\nfunction LogoutButton(props) {\r\n    return <button onClick={props.onClick}>Logout</button>;\r\n}\r\n\r\nclass LoginControl extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLoginClick = this.handleLoginClick.bind(this);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.state = {isLoggedIn: false};\r\n  }\r\n\r\n  handleLoginClick() {\r\n    this.setState({isLoggedIn: true});\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    this.setState({isLoggedIn: false});\r\n  }\r\n\r\n  render() {\r\n    const isLoggedIn = this.state.isLoggedIn;\r\n    let button = null;\r\n    if(isLoggedIn) {\r\n        button = <LogoutButton onClick={this.handleLogoutClick} />;\r\n    } else {\r\n        button = <LoginButton onClick={this.handleLoginClick} />;\r\n    }\r\n    return (\r\n      <div>\r\n          <All isLoggedIn={isLoggedIn} />\r\n          {button}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginControl;","import React, { Component } from 'react';\nimport \"./App.css\";\nimport LoginControl from './logincontrol.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <section>\n          <LoginControl />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}